# Copied from /etc/sway/config on 2022-12-04

set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | wmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

# Put machine-specific hacks here, not tracked in git
include $HOME/.config/sway/machine_hacks/*


### Key bindings
#
# Basics:
#

workspace_layout tabbed


    # Start a terminal
    bindsym $mod+t exec $term
# bindsym $mod+shift+t splith; layout tabbed; exec $term

    # Kill focused window
    bindsym $mod+c kill

    # Start your launcher
    bindsym $mod+r exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    # Replaced by sway-overfocus, see below
    #bindsym $mod+$left focus left
    #bindsym $mod+$down focus down
    #bindsym $mod+$up focus up
    #bindsym $mod+$right focus right

    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+Return fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    # bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
    bindsym $mod+Shift+a focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+m move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+m scratchpad show

# Mark and move marks

# Disabled, this can crash sway
bindsym $mod+y mark --toggle y
# TODO: Disable floating when moving windows from the scratchpad
# Currently $mod+Shift+Space can be used to toggle floating
# [con_mark=y] floating disable;
bindsym $mod+Shift+y mark _here; [con_mark=y] move to mark _here;  [con_mark=_here] unmark; [con_mark=y] focus; [con_mark=y] unmark

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+d mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position bottom

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
    status_command i3status-rs $HOME/.config/sway/i3status-rust.toml
    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

# Replace movement with sway-overfocus
bindsym $mod+h exec sway-overfocus split-lt float-lt output-ls
bindsym $mod+j exec sway-overfocus split-dt float-dt output-ds
bindsym $mod+k exec sway-overfocus split-ut float-ut output-us
bindsym $mod+l exec sway-overfocus split-rt float-rt output-rs
bindsym $mod+i exec sway-overfocus group-rw group-dw
bindsym $mod+u exec sway-overfocus group-lw group-uw

# Move workspace to another monitor
bindsym $mod+Control+Shift+l move workspace to output right
bindsym $mod+Control+Shift+h move workspace to output left

include /etc/sway/config.d/*

# Keyboard stuff

input "type:keyboard" {
    xkb_layout us,fi
    # xkb_variant ,nodeadkeys
    # All options must be on the same line
    # Compose-key looks at ~/.XCompose
    xkb_options compose:ralt,caps:escape
    repeat_rate 20
    repeat_delay 200
}

bindsym $mod+space input type:keyboard xkb_switch_layout next

# Media etc. keys
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
# Laptop hack:
bindsym XF86AudioMicMute exec "pactl set-source-mute @DEFAULT_SOURCE@ toggle && amixer -c0 sset Capture toggle"
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+

# Locking
bindsym Ctrl+Alt+l exec sh $HOME/.config/sway/lock.sh --screenshot
exec_always killall swayidle
exec_always sh $HOME/.config/sway/swayidle.sh

# Screenshot
bindsym $mod+p exec grim $HOME/last_screenshot.png
bindsym $mod+Shift+p exec bash -c 'grim -g "$(slurp)" ~/last_screenshot.png && wl-copy < ~/last_screenshot.png'

# Redshift
exec_always bash -c 'killall -w redshift; redshift -l 61.5:24 -m wayland'
# Notifications using mako
exec_always bash -c 'killall -w mako; mako --default-timeout=5000 &!'

# Inhibit sleep if there are fullscreen windows
# for_window [class=".*"] inhibit_idle fullscreen
# for_window [app_id=".*"] inhibit_idle fullscreen

# XWayland
for_window [shell="xwayland"] title_format "%title [XWayland]"
